'''Chemical Engineering Design Library (ChEDL). Utilities for process modeling.
Copyright (C) 2023 Caleb Bell <Caleb.Andrew.Bell@gmail.com>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
'''

from math import *

import pytest
from chemicals.elements import periodic_table
from chemicals.identifiers import pubchem_db
from fluids.constants import R
from fluids.numerics import assert_close
from thermo.chemical_utils import standard_state_ideal_gas_formation

from thermo.chemical import Chemical

def test_standard_state_ideal_gas_formation_water():
    c = Chemical('water') # H2O
    Ts = [1e-10, 100, 200, 298.15, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100, 2200, 2300, 2400, 2500, 2600, 2700, 2800, 2900, 3000, 3100, 3200, 3300, 3400, 3500, 3600, 3700, 3800, 3900, 4000, 4100, 4200, 4300, 4400, 4500, 4600, 4700, 4800, 4900, 5000, 5100, 5200, 5300, 5400, 5500, 5600, 5700, 5800, 5900, 6000]
    Ts = Ts[1:]
    dHs_Janaf = [-238.921, -240.083, -240.9, -241.826, -241.844, -242.846, -243.826, -244.758, -245.632, -246.443, -247.185, -247.857, -248.46, -248.997, -249.473, -249.894, -250.265, -250.592, -250.881, -251.138, -251.368, -251.575, -251.762, -251.934, -252.092, -252.239, -252.379, -252.513, -252.643, -252.771, -252.897, -253.024, -253.152, -253.282, -253.416, -253.553, -253.696, -253.844, -253.997, -254.158, -254.326, -254.501, -254.684, -254.876, -255.078, -255.288, -255.508, -255.738, -255.978, -256.229, -256.491, -256.763, -257.046, -257.338, -257.639, -257.95, -258.268, -258.595, -258.93, -259.272, -259.621, -259.977]
    dHs_Janaf = [v*1000 for v in dHs_Janaf[1:]]

    for T, dH_janaf in zip(Ts, dHs_Janaf):
        dH_calc = standard_state_ideal_gas_formation(c, T)[0]
        if T < 1000:
            rtol = 1e-3
        elif T < 2000:
            rtol = 1e-3
        else:
            rtol = .12
        assert_close(dH_calc, dH_janaf, rtol=rtol)

def test_standard_state_ideal_gas_formation_methane():
    Ts = [100.0, 200.0, 250.0, 298.15, 300.0, 350.0, 400.0, 450.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0]
    dH_janafs = [-69644.0, -72027.0, -73426.0, -74873.0, -74929.0, -76461.0, -77969.0, -79422.0, -80802.0, -83308.0, -85452.0, -87238.0, -88692.0, -89849.0, -90750.0, -91437.0, -91945.0, -92308.0, -92553.0, -92703.0, -92780.0, -92797.0, -92770.0, -92709.0, -92624.0, -92521.0, -92409.0, -92291.0, -92174.0, -92060.0, -91954.0, -91857.0, -91773.0, -91705.0, -91653.0, -91621.0, -91609.0, -91619.0, -91654.0, -91713.0, -91798.0, -91911.0, -92051.0, -92222.0, -92422.0, -92652.0, -92914.0, -93208.0, -93533.0, -93891.0, -94281.0, -94702.0, -95156.0, -95641.0, -96157.0, -96703.0, -97278.0, -97882.0, -98513.0, -99170.0, -99852.0, -100557.0, -101284.0, -102032.0]
    dG_janafs = [-64352.99999999999, -58161.0, -54536.0, -50768.0, -50618.0, -46445.0, -42054.0, -37476.0, -32741.0, -22887.0, -12643.0, -2115.0, 8616.0, 19492.0, 30472.0, 41524.0, 52626.0, 63761.0, 74918.0, 86088.0, 97265.0, 108445.0, 119624.0, 130801.99999999999, 141975.0, 153144.0, 164308.0, 175467.0, 186622.0, 197771.0, 208916.0, 220058.0, 231196.0, 242332.0, 253465.0, 264598.0, 275730.0, 286861.0, 297993.0, 309127.0, 320262.0, 331401.0, 342542.0, 353687.0, 364838.0, 375993.0, 387155.0, 398322.0, 409497.0, 420679.0, 431869.0, 443069.0, 454277.0, 465495.0, 476722.0, 487961.0, 499210.0, 510470.0, 521741.0, 533025.0, 544320.0, 555628.0, 566946.0, 578279.0]
    c = Chemical('methane')
    c.HeatCapacityGas.method = 'WEBBOOK_SHOMATE'
    dH_mean_err = 0
    dG_mean_err = 0

    for T, dH_janaf, dG_janaf in zip(Ts, dH_janafs, dG_janafs):
        dH_calc, dS_calc, dG_calc = standard_state_ideal_gas_formation(c, T)
        if T == 100:
            rtol = .02
        else:
            rtol = .01
        assert_close(dH_calc, dH_janaf, rtol=rtol)
        dH_mean_err += abs(dH_calc-dH_janaf)
        dG_mean_err += abs(dG_calc-dG_janaf)
    #     assert_close(dG_calc, dG_janaf, rtol=rtol)
    #     print(T, dG_calc/dG_janaf)

    dH_mean_err = dH_mean_err/len(Ts)
    dG_mean_err = dG_mean_err/len(Ts)
    assert dG_mean_err < 300

def test_standard_state_ideal_gas_formation_CF4():
    Ts = [100.0, 200.0, 250.0, 298.15, 300.0, 350.0, 400.0, 450.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0]
    dH_janafs = [-929755.0, -931896.0, -932645.0, -933199.0, -933218.0, -933651.0, -933970.0, -934198.0, -934351.0, -934485.0, -934451.0, -934298.0, -934065.0, -933778.0, -933456.0, -933115.0, -932766.0, -932417.0, -932075.0, -931744.0, -931428.0, -931125.0, -930835.0, -930556.0, -930283.0, -930011.0, -929735.0, -929449.0, -929146.0, -928821.0, -928466.0, -928077.0, -927649.0, -927177.0, -926656.0, -926084.0, -925458.0, -924775.0, -924034.0, -923233.0, -922372.0, -921450.0, -920468.0, -919425.0, -918322.0, -917160.0, -915940.0, -914663.0, -913330.0, -911943.0, -910503.0, -909011.0, -907470.0, -905880.0, -904243.0, -902562.0, -900837.0, -899069.0, -897262.0, -895416.0, -893532.0, -891613.0, -889659.0, -887672.0]
    dG_janafs = [-916822.0, -902995.0, -895679.0, -888507.0, -888229.0, -880695.0, -873107.0, -865485.0, -857841.0, -842523.0, -827197.0, -811884.0, -796596.0, -781337.0, -766108.0, -750909.0, -735739.0, -720597.0, -705479.0, -690383.0, -675308.0, -660251.0, -645210.0, -630184.0, -615173.0, -600174.0, -585187.0, -570213.0, -555251.0, -540302.0, -525365.0, -510442.0, -495534.0, -480642.0, -465766.0, -450907.0, -436068.0, -421248.0, -406449.0, -391671.0, -376918.0, -362188.0, -347483.0, -332804.0, -318153.0, -303528.0, -288932.0, -274365.0, -259827.0, -245321.0, -230844.0, -216399.0, -201986.0, -187604.0, -173255.0, -158937.0, -144653.0, -130402.99999999999, -116185.0, -102000.0, -87849.0, -73731.0, -59645.0, -45595.0]

    c = Chemical('CF4')
    c.HeatCapacityGas.method = 'WEBBOOK_SHOMATE'
    dH_mean_err = 0
    dG_mean_err = 0

    for T, dH_janaf, dG_janaf in zip(Ts, dH_janafs, dG_janafs):
        dH_calc, dS_calc, dG_calc = standard_state_ideal_gas_formation(c, T)
        if T < 5000:
            rtol = .01
        else:
            rtol = .05
        assert_close(dH_calc, dH_janaf, rtol=rtol)
        dH_mean_err += abs(dH_calc-dH_janaf)
        dG_mean_err += abs(dG_calc-dG_janaf)
        assert_close(dG_calc, dG_janaf, rtol=rtol)
    #     print(T, dG_calc/dG_janaf)
        # print(T, dH_janaf, dH_calc)

def test_standard_state_ideal_gas_formation_C2N2():
    Ts = [100.0, 200.0, 250.0, 298.15, 300.0, 350.0, 400.0, 450.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0]
    dH_janafs = [307303.0, 308042.0, 308558.0, 309072.0, 309092.0, 309606.0, 310079.0, 310495.0, 310850.0, 311392.0, 311752.0, 311982.0, 312117.0, 312184.0, 312199.0, 312171.0, 312109.0, 312015.0, 311895.0, 311748.0, 311577.0, 311382.0, 311165.0, 310925.0, 310663.0, 310379.0, 310073.0, 309746.0, 309397.0, 309026.0, 308634.0, 308220.0, 307785.0, 307328.0, 306850.0, 306350.0, 305828.0, 305285.0, 304720.0, 304134.0, 303526.0, 302896.0, 302244.0, 301571.0, 300876.0, 300159.0, 299420.0, 298659.0, 297877.0, 297073.0, 296247.0, 295398.0, 294528.0, 293635.0, 292720.0, 291783.0, 290824.0, 289842.0, 288837.0, 287811.0, 286761.0, 285688.0, 284592.0, 283472.0]
    dG_janafs = [304362.0, 301183.0, 299409.0, 297601.0, 297529.0, 295561.0, 293522.0, 291427.0, 289288.0, 284922.0, 280479.0, 275995.0, 271487.0, 266969.0, 262446.0, 257923.99999999997, 253406.0, 248894.0, 244389.0, 239893.0, 235407.0, 230932.0, 226469.0, 222017.0, 217578.0, 213152.0, 208740.0, 204341.0, 199956.0, 195586.0, 191230.0, 186889.0, 182563.0, 178253.0, 173958.0, 169680.0, 165417.0, 161170.0, 156939.0, 152725.0, 148528.0, 144347.0, 140183.0, 136036.0, 131906.0, 127794.0, 123699.0, 119621.0, 115561.0, 111518.0, 107493.0, 103486.0, 99497.0, 95525.0, 91572.0, 87637.0, 83720.0, 79822.0, 75942.0, 72080.0, 68237.0, 64413.0, 60607.0, 56820.0]

    c = Chemical('Ethanedinitrile')
    c.HeatCapacityGas.method = 'WEBBOOK_SHOMATE'

    for T, dH_janaf, dG_janaf in zip(Ts, dH_janafs, dG_janafs):
        dH_calc, dS_calc, dG_calc = standard_state_ideal_gas_formation(c, T)
        if T < 4500:
            rtol = .01
        else:
            rtol = .03
        assert_close(dH_calc, dH_janaf, rtol=rtol)
        assert_close(dG_calc, dG_janaf, rtol=rtol)

def test_standard_state_ideal_gas_formation_CFN():
    # This test case is pretty messed up. 
    # https://atct.anl.gov/Thermochemical%20Data/version%201.124/species/?species_number=216
    # The JANAF data from 1969 disagrees with modern data extremely bad.
    # No check on G is implemented, and the Hf value has to be from JANAF.
    Ts = [100.0, 200.0, 250.0, 298.15, 300.0, 350.0, 400.0, 450.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0]
    dH_janafs = [35477.0, 35638.0, 35808.0, 35982.0, 35989.0, 36161.0, 36314.0, 36441.0, 36542.0, 36670.0, 36721.0, 36719.0, 36677.0, 36608.0, 36516.0, 36406.0, 36279.0, 36136.0, 35977.0, 35804.0, 35616.0, 35415.0, 35200.0, 34973.0, 34736.0, 34489.0, 34234.0, 33974.0, 33708.0, 33440.0, 33171.0, 32902.0, 32634.0, 32369.0, 32107.0, 31850.0, 31598.0, 31352.0, 31112.0, 30878.0, 30652.0, 30432.0, 30218.0, 30012.0, 29812.0, 29618.0, 29430.0, 29248.0, 29072.0, 28901.0, 28735.0, 28572.0, 28414.0, 28259.0, 28108.0, 27959.0, 27812.0, 27667.0, 27523.0, 27380.0, 27238.0, 27095.0, 26952.0, 26808.0]
    dG_janafs = [33468.0, 31424.0, 30352.0, 29285.0, 29243.0, 28105.0, 26944.0, 25764.0, 24573.0, 22165.0, 19743.0, 17317.0, 14894.0, 12477.0, 10068.0, 7668.0, 5279.0, 2899.0, 531.0, -1827.0, -4173.0, -6508.0, -8831.0, -11143.0, -13443.0, -15731.0, -18008.0, -20274.0, -22529.0, -24773.0, -27007.0, -29231.0, -31445.0, -33650.0, -35847.0, -38035.0, -40215.0, -42387.0, -44552.0, -46711.0, -48863.0, -51009.0, -53149.0, -55284.0, -57414.0, -59539.0, -61660.0, -63776.0, -65888.0, -67997.0, -70101.0, -72203.0, -74300.0, -76395.0, -78487.0, -80575.0, -82661.0, -84744.0, -86824.0, -88902.0, -90978.0, -93050.0, -95120.0, -97188.0]

    c = Chemical('Cyanogen fluoride')
    c.HeatCapacityGas.method = 'WEBBOOK_SHOMATE'
    for T, dH_janaf, dG_janaf in zip(Ts, dH_janafs, dG_janafs):
        dH_calc, dS_calc, dG_calc = standard_state_ideal_gas_formation(c, T, Hf=35980.0, Sf=21.8)
        rtol = .01
        assert_close(dH_calc, dH_janaf, rtol=rtol)


def test_standard_state_ideal_gas_formation_PF3():
    Ts = [100.0, 200.0, 250.0, 298.15, 300.0, 350.0, 400.0, 450.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0]
    dH_janafs = [-954640.0, -957038.0, -957812.0, -958441.0, -958464.0, -959738.0, -960274.0, -960720.0, -961094.0, -961686.0, -962137.0, -962495.0, -962794.0, -963054.0, -963290.0, -1027083.0000000001, -1026521.9999999999, -1025964.9999999999, -1025415.0, -1024874.0, -1024342.0000000001, -1023820.0, -1023305.0, -1022795.0, -1022287.0, -1021777.0, -1021259.0, -1020729.0, -1020183.0, -1019614.0, -1019019.0, -1018394.0, -1017733.0, -1017034.0, -1016294.0, -1015509.0, -1014679.0, -1013800.0, -1012872.0, -1011893.0, -1010864.0, -1009782.0, -1008650.0, -1007466.0, -1006232.0, -1004947.0, -1003612.0, -1002228.0, -1000797.0, -999318.0, -997794.0, -996225.0, -994613.0, -992958.0, -991262.0, -989526.0, -987750.0, -985938.0, -984088.0, -982204.0, -980285.0, -978333.0, -976349.0, -974334.0]
    dG_janafs = [-949580.0, -943753.0, -940340.0, -936916.0, -936782.0, -933052.0, -929202.0, -925291.0, -921334.0, -913323.0, -905225.0, -897070.0, -888873.0, -880646.0, -872393.0, -863042.0, -849394.0, -835790.0, -822225.0, -808697.0, -795202.0, -781739.0, -768304.0, -754896.0, -741514.0, -728155.0, -714820.0, -701508.0, -688218.0, -674951.0, -661706.0, -648483.0, -635284.0, -622108.0, -608956.0, -595828.0, -582726.0, -569650.0, -556600.0, -543577.0, -530582.0, -517616.0, -504679.0, -491771.0, -478895.0, -466048.0, -453233.0, -440449.0, -427697.0, -414978.0, -402291.0, -389637.0, -377017.0, -364430.0, -351876.0, -339356.0, -326869.0, -314417.0, -301999.0, -289613.0, -277263.0, -264947.0, -252663.0, -240415.0]

    c = Chemical('Phosphorus Fluoride')
    c.HeatCapacityGas.method = 'WEBBOOK_SHOMATE'
    for T, dH_janaf, dG_janaf in zip(Ts, dH_janafs, dG_janafs):
        dH_calc, dS_calc, dG_calc = standard_state_ideal_gas_formation(c, T)
        if T < 3500:
            rtol = rtol_G =.01
        else:
            rtol = .04
            rtol_G = .1
        assert_close(dH_calc, dH_janaf, rtol=rtol)
        assert_close(dG_calc, dG_janaf, rtol=rtol_G)

def test_standard_state_ideal_gas_formation_silane():
    # Silane matches amazingly well because every bit of it is coming from Webbook or JANAF
    # Only the low temperature extrapolation has any difference
    # This tolerance will be increased in the future!
    Ts = [100.0, 200.0, 250.0, 298.15, 300.0, 350.0, 400.0, 450.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0]
    dH_janafs = [40984.0, 37811.0, 36023.0, 34309.0, 34244.0, 32567.999999999996, 31038.0, 29667.0, 28454.0, 26478.0, 25042.0, 24056.0, 23433.0, 23093.0, 22965.0, 22989.0, 23119.0, 23315.0, 23548.0, 23793.0, -26143.0, -25691.0, -25226.0, -24756.0, -24288.0, -23826.0, -23375.0, -22936.0, -22513.0, -22108.0, -21720.0, -21353.0, -21007.0, -20683.0, -20381.0, -20102.0, -19847.0, -19617.0, -19412.0, -403383.0, -402815.0, -402275.0, -401764.0, -401280.0, -400824.0, -400397.0, -399997.0, -399625.0, -399280.0, -398963.0, -398672.0, -398408.0, -398170.0, -397957.0, -397768.0, -397603.0, -397460.0, -397339.0, -397239.0, -397158.0, -397095.0, -397050.0, -397019.0, -397003.0]
    dG_janafs = [44936.0, 50067.0, 53336.0, 56827.0, 56967.0, 60888.0, 65040.00000000001, 69374.0, 73853.0, 83128.0, 92690.0, 102426.0, 112263.0, 122153.0, 132067.0, 141986.0, 151897.0, 161796.0, 171680.0, 181547.0, 191846.0, 204656.0, 217440.0, 230200.0, 242937.0, 255651.0, 268344.0, 281018.0, 293674.0, 306313.0, 318937.0, 331548.0, 344145.0, 356731.0, 369306.0, 381872.0, 394430.0, 406980.0, 419524.0, 442523.0, 466013.0, 489488.0, 512948.99999999994, 536396.0, 559833.0, 583258.0, 606674.0, 630080.0, 653478.0, 676869.0, 700254.0, 723633.0, 747006.0, 770375.0, 793739.0, 817101.0, 840459.0, 863815.0, 887168.0, 910521.0, 933872.0, 957222.0, 980570.0, 1003919.0]
    c = Chemical('7803-62-5')
    c.HeatCapacityGas.method = 'WEBBOOK_SHOMATE'
    for T, dH_janaf, dG_janaf in zip(Ts, dH_janafs, dG_janafs):
        dH_calc, dS_calc, dG_calc = standard_state_ideal_gas_formation(c, T)
        if T == 100:
            rtol = .02
        else:
            rtol = .003
        assert_close(dH_calc, dH_janaf, rtol=rtol)
        assert_close(dG_calc, dG_janaf, rtol=rtol)


def test_standard_state_ideal_gas_formation_HCl():
    Ts = [100.0, 200.0, 250.0, 298.15, 300.0, 350.0, 400.0, 450.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0]
    dH_janafs = [-92214.0, -92168.0, -92219.0, -92312.0, -92316.0, -92443.0, -92589.0, -92747.0, -92913.0, -93251.0, -93579.0, -93881.0, -94152.0, -94388.0, -94591.0, -94766.0, -94916.0, -95046.0, -95160.0, -95261.0, -95351.0, -95435.0, -95514.0, -95590.0, -95665.0, -95742.0, -95820.0, -95903.0, -95991.0, -96086.0, -96188.0, -96298.0, -96418.0, -96547.0, -96685.0, -96834.0, -96992.0, -97159.0, -97334.0, -97518.0, -97708.0, -97905.0, -98107.0, -98313.0, -98521.0, -98731.0, -98942.0, -99152.0, -99360.0, -99564.0, -99764.0, -99959.0, -100147.0, -100328.0, -100499.0, -100662.0, -100814.0, -100954.0, -101083.0, -101198.0, -101300.0, -101387.0, -101460.0, -101517.0]
    dG_janafs = [-93236.0, -94284.0, -94809.0, -95300.0, -95318.0, -95809.0, -96280.0, -96732.0, -97166.0, -97985.0, -98747.0, -99465.0, -100146.0, -100799.0, -101430.0, -102044.0, -102644.0, -103234.0, -103815.0, -104388.0, -104956.0, -105519.0, -106077.0, -106631.0, -107181.0, -107727.0, -108270.0, -108810.0, -109346.0, -109878.0, -110407.0, -110932.0, -111452.0, -111968.0, -112480.0, -112987.0, -113490.0, -113987.0, -114480.0, -114967.0, -115449.0, -115926.0, -116397.0, -116864.0, -117325.0, -117781.0, -118232.0, -118678.0, -119120.0, -119557.0, -119989.0, -120417.0, -120842.0, -121262.0, -121679.0, -122093.0, -122503.0, -122911.0, -123317.0, -123720.0, -124121.0, -124520.0, -124919.0, -125316.0]

    c = Chemical('hydrogen chloride')
    c.HeatCapacityGas.method = 'WEBBOOK_SHOMATE'
    dH_mean_err = 0
    dG_mean_err = 0

    for T, dH_janaf, dG_janaf in zip(Ts, dH_janafs, dG_janafs):
        if T > 1500:
            # I think their HCl heat capacity a high temperature is very bad which is why there is drift there
            continue
        dH_calc, dS_calc, dG_calc = standard_state_ideal_gas_formation(c, T)
        rtol = .02
        dH_mean_err += abs(dH_calc-dH_janaf)
        dG_mean_err += abs(dG_calc-dG_janaf)
        
        assert_close(dG_calc, dG_janaf, rtol=rtol)
        assert_close(dH_calc, dH_janaf, rtol=rtol)

def test_standard_state_ideal_gas_formation_HBr():
    Ts = [100.0, 200.0, 250.0, 298.15, 300.0, 350.0, 400.0, 450.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0]
    dH_janafs = [-28622.0, -29507.0, -30157.0, -36443.0, -36485.0, -52077.0, -52261.0, -52449.0, -52636.0, -52996.0, -53320.0, -53599.0, -53830.0, -54018.0, -54168.0, -54287.0, -54381.0, -54455.0, -54517.0, -54568.0, -54614.0, -54658.0, -54703.0, -54751.0, -54805.0, -54865.0, -54935.0, -55014.0, -55104.0, -55205.0, -55317.0, -55440.0, -55574.0, -55719.0, -55872.0, -56034.0, -56203.0, -56378.0, -56558.0, -56742.0, -56928.0, -57116.0, -57304.0, -57492.0, -57677.0, -57860.0, -58039.0, -58214.0, -58384.0, -58548.0, -58705.0, -58856.0, -58999.0, -59134.0, -59260.0, -59378.0, -59487.0, -59585.0, -59675.0, -59753.0, -59822.0, -59879.0, -59925.0, -59960.0]
    dG_janafs = [-37581.0, -46237.0, -50348.0, -53513.0, -53619.0, -55615.0, -56108.0, -56577.0, -57026.0, -57869.0, -58655.0, -59398.0, -60109.0, -60796.0, -61466.0, -62124.0, -62773.0, -63416.0, -64054.0, -64688.0, -65319.0, -65947.0, -66573.0, -67196.0, -67817.0, -68436.0, -69051.0, -69663.0, -70272.0, -70877.0, -71477.0, -72074.0, -72665.0, -73252.0, -73834.0, -74411.0, -74983.0, -75549.0, -76110.0, -76666.0, -77217.0, -77763.0, -78304.0, -78840.0, -79372.0, -79898.0, -80421.0, -80940.0, -81454.0, -81965.0, -82472.0, -82976.0, -83478.0, -83975.0, -84471.0, -84964.0, -85455.0, -85944.0, -86432.0, -86917.0, -87402.0, -87885.0, -88368.0, -88850.0]

    c = Chemical('hydrogen bromide')
    c.HeatCapacityGas.method = 'WEBBOOK_SHOMATE'
    for T, dH_janaf, dG_janaf in zip(Ts, dH_janafs, dG_janafs):
        dH_calc, dS_calc, dG_calc = standard_state_ideal_gas_formation(c, T, Hf=-36443.0, Sf=57.25306053999665)
        rtol = .3
        assert_close(dH_calc, dH_janaf, rtol=rtol)
        # Even with Hf and Sf the values are simply different and that's OK

def test_standard_state_ideal_gas_formation_HI():
    Ts = [100.0, 200.0, 250.0, 298.15, 300.0, 350.0, 400.0, 450.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0]
    dH_janafs = [28396.0, 27494.0, 26939.0, 26359.0, 26336.0, 25665.0, 16987.0, 15710.0, -5622.0, -5961.0, -6243.0, -6466.0, -6633.0, -6754.0, -6838.0, -6897.0, -6942.0, -6982.0, -7027.0, -7087.0, -7168.0, -7277.0, -7416.0, -7589.0, -7794.0, -8029.999999999999, -8294.0, -8581.0, -8886.0, -9204.0, -9528.0, -9854.0, -10176.0, -10489.0, -10789.0, -11073.0, -11338.0, -11580.0, -11799.0, -11993.0, -12161.0, -12303.0, -12417.0, -12504.0, -12565.0, -12599.0, -12607.0, -12590.0, -12549.0, -12484.0, -12395.0, -12284.0, -12151.0, -11998.0, -11823.0, -11630.0, -11416.0, -11185.0, -10935.0, -10667.0, -10382.0, -10080.0, -9760.0, -9425.0]
    dG_janafs = [19004.0, 9940.0, 5615.0, 1560.0, 1406.0, -2698.0, -6428.0, -9279.0, -10088.0, -10948.0, -11756.0, -12528.0, -13275.0, -14006.0, -14727.0, -15441.0, -16151.0, -16858.0, -17562.0, -18263.0, -18959.0, -19649.0, -20333.0, -21009.0, -21675.0, -22330.0, -22975.0, -23607.0, -24227.0, -24834.0, -25429.0, -26012.0, -26583.0, -27144.0, -27694.0, -28235.0, -28767.0, -29291.0, -29809.0, -30321.0, -30828.0, -31330.0, -31829.0, -32326.0, -32821.0, -33314.0, -33807.0, -34300.0, -34794.0, -35289.0, -35786.0, -36284.0, -36786.0, -37290.0, -37798.0, -38309.0, -38824.0, -39343.0, -39867.0, -40395.0, -40929.0, -41467.0, -42011.0, -42561.0]

    c = Chemical('HI')
    c.HeatCapacityGas.method = 'WEBBOOK_SHOMATE'
    for T, dH_janaf, dG_janaf in zip(Ts, dH_janafs, dG_janafs):
        dH_calc, dS_calc, dG_calc = standard_state_ideal_gas_formation(c, T)
        if 250 < T < 400:
            # The almost-zero enthalpy region has a higher tolerange
            rtol=.1
        else:
            rtol = .02
        assert_close(dH_calc, dH_janaf, rtol=rtol)
        assert_close(dG_calc, dG_janaf, rtol=rtol)

def test_standard_state_ideal_gas_formation_I2Mg():
    Ts = [100.0, 200.0, 250.0, 298.15, 300.0, 350.0, 400.0, 450.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0]
    dH_janafs = [-156990.0, -158436.0, -159332.0, -160247.0, -160284.0, -161359.0, -178452.0, -180762.0, -223213.0, -223590.0, -224060.0, -224641.0, -225354.0, -234808.0, -235844.0, -236893.0, -237962.0, -366470.0, -366253.0, -366085.0, -365974.0, -365928.0, -365949.0, -366040.0, -366198.0, -366418.0, -366693.0, -367014.0, -367368.0, -367747.0, -368138.0, -368531.0, -368916.0, -369285.0, -369631.0, -369947.0, -370230.0, -370475.0, -370680.0, -370846.0, -370971.0, -371057.0, -371104.0, -371117.0, -371095.0, -371044.0, -370966.0, -370865.0, -370744.0, -370608.0, -370459.0, -370302.0, -370140.0, -369978.0, -369819.0, -369665.0, -369521.0, -369390.0, -369275.0, -369179.0, -369105.0, -369055.0, -369032.0, -369039.0]
    dG_janafs = [-175566.0, -193639.0, -202337.0, -210538.0, -210850.0, -219196.0, -226834.0, -232743.0, -234595.0, -236838.0, -239010.0, -241108.0, -243125.0, -244342.0, -245245.0, -246054.0, -246774.0, -244244.0, -235521.0, -226812.0, -218111.0, -209414.0, -200719.0, -192021.0, -183316.0, -174602.0, -165878.0, -157140.0, -148388.0, -139621.0, -130840.0, -122044.0, -113234.0, -104411.0, -95576.0, -86730.0, -77875.0, -69012.0, -60142.0, -51268.0, -42388.0, -33507.0, -24623.0, -15739.0, -6855.0, 2029.0, 10911.0, 19790.0, 28668.0, 37542.0, 46413.0, 55281.0, 64146.0, 73007.0, 81865.0, 90721.0, 99572.0, 108422.0, 117269.0, 126115.0, 134959.0, 143801.0, 152643.0, 161485.0]

    c = Chemical('10377-58-9') # I2Mg
    c.HeatCapacityGas.method = 'WEBBOOK_SHOMATE'
    for T, dH_janaf, dG_janaf in zip(Ts, dH_janafs, dG_janafs):
        dH_calc, dS_calc, dG_calc = standard_state_ideal_gas_formation(c, T)
        assert_close(dH_calc, dH_janaf, rtol=.01)
        if T < 2000:
            # Great match except G sign changes so the rtol change is huge
            assert_close(dG_calc, dG_janaf, rtol=0.01)


def test_standard_state_ideal_gas_formation_I2Hg():
    Ts = [100.0, 200.0, 250.0, 298.15, 300.0, 350.0, 400.0, 450.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0]
    dH_janafs = [-10065.0, -11805.0, -15118.0, -16129.000000000002, -16169.0, -17305.0, -34430.0, -36743.0, -79175.0, -79445.0, -138478.0, -138120.0, -137769.0, -137427.0, -137095.0, -136780.0, -136486.0, -136222.0, -135997.0, -135822.0, -135705.0, -135652.0, -135669.0, -135755.0, -135909.0, -136124.0, -136395.0, -136710.0, -137058.0, -137429.0, -137811.0, -138191.0, -138560.0, -138907.0, -139225.0, -139505.0, -139742.0, -139931.0, -140067.0, -140149.0, -140173.0, -140138.0, -140044.0, -139891.0, -139679.0, -139409.0, -139082.0, -138698.0, -138261.0, -137771.0, -137230.0, -136640.0, -136003.0, -135320.0, -134595.0, -133828.0, -133021.0, -132178.0, -131298.0, -130384.99999999999, -129440.0, -128465.0, -127462.0, -126432.0]
    dG_janafs = [-27465.0, -44218.0, -52052.0, -59074.0, -59340.0, -66448.0, -72842.0, -77504.0, -78110.0, -77872.0, -71017.0, -61404.0, -51836.0, -42306.0, -32810.0, -23344.0, -13903.0, -4484.0, 4918.0, 14307.0, 23686.0, 33060.0, 42433.0, 51808.0, 61190.0, 70580.0, 79982.0, 89396.0, 98824.0, 108267.0, 117724.0, 127195.0, 136680.0, 146177.0, 155685.0, 165203.0, 174729.0, 184261.0, 193799.0, 203339.0, 212881.0, 222422.0, 231962.0, 241499.0, 251031.0, 260558.0, 270077.0, 279588.0, 289090.0, 298581.0, 308061.0, 317529.0, 326985.0, 336426.0, 345854.0, 355268.0, 364665.0, 374048.0, 383414.0, 392765.0, 402098.0, 411415.0, 420715.0, 429997.0]

    c = Chemical('7774-29-0') # I2Hg
    c.HeatCapacityGas.method = 'WEBBOOK_SHOMATE'
    for T, dH_janaf, dG_janaf in zip(Ts, dH_janafs, dG_janafs):
        dH_calc, dS_calc, dG_calc = standard_state_ideal_gas_formation(c, T)
        # G trends closely but different values from the initial offset
        if T > 700:
            assert_close(dH_calc, dH_janaf, rtol=.02)
        else:
            assert_close(dH_calc, dH_janaf, rtol=.3)

def test_standard_state_ideal_gas_formation_IB():
    Ts = [100.0, 200.0, 250.0, 298.15, 300.0, 350.0, 400.0, 450.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0]
    dH_janafs = [305494.0, 305706.0, 305619.0, 305432.0, 305423.0, 305090.0, 296677.0, 295595.0, 274394.0, 274149.0, 273767.0, 273282.0, 272716.0, 272080.0, 271384.0, 270633.0, 269826.0, 268965.0, 268048.0, 267070.0, 266030.0, 264926.0, 263756.0, 262521.0, 261221.99999999997, 259863.0, 258449.0, 206724.0, 205136.0, 203542.0, 201948.0, 200358.0, 198780.0, 197216.0, 195673.0, 194152.0, 192658.0, 191192.0, 189758.0, 188355.0, 186986.0, 185650.0, 184349.0, 183082.0, 181849.0, -299200.0, -299279.0, -299328.0, -299346.0, -299336.0, -299298.0, -299233.0, -299143.0, -299029.0, -298892.0, -298733.0, -298553.0, -298354.0, -298136.0, -297901.0, -297650.0, -297383.0, -297103.0, -296810.0]
    dG_janafs = [288673.0, 271726.0, 263238.0, 255091.0, 254779.0, 246362.0, 238274.0, 231038.0, 225825.0, 216132.0, 206491.0, 196912.0, 187399.0, 177953.0, 168573.0, 159259.0, 150011.0, 140826.0, 131705.0, 122647.0, 113652.0, 104720.0, 95851.0, 87046.0, 78304.0, 69625.0, 61009.0, 53525.0, 47174.0, 40888.0, 34662.0, 28495.0, 22385.0, 16329.0, 10325.0, 4370.0, -1537.0, -7400.0, -13220.0, -18999.0, -24740.0, -30444.0, -36114.0, -41751.0, -47356.0, -45908.0, -39876.0, -33843.0, -27809.0, -21775.0, -15741.0, -9708.0, -3678.0, 2351.0, 8377.0, 14401.0, 20421.0, 26437.0, 32450.000000000004, 38459.0, 44463.0, 50463.0, 56457.0, 62448.0]

    c = Chemical('Iodoborane')
    c.HeatCapacityGas.method = 'WEBBOOK_SHOMATE'
    for T, dH_janaf, dG_janaf in zip(Ts, dH_janafs, dG_janafs):
        dH_calc, dS_calc, dG_calc = standard_state_ideal_gas_formation(c, T)
        rtol = .01
        assert_close(dH_calc, dH_janaf, rtol=rtol)
        assert_close(dG_calc, dG_janaf, atol=500)

def test_standard_state_ideal_gas_formation_F2Pb():
    Ts = [100.0, 200.0, 250.0, 298.15, 300.0, 350.0, 400.0, 450.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0]
    dH_janafs = [-433148.0, -434346.0, -434774.0, -435136.0, -435149.0, -435501.0, -435850.0, -436210.0, -436585.0, -437389.0, -443134.0, -444086.0, -445021.0, -445938.0, -446838.0, -447722.0, -448596.0, -449476.0, -450371.0, -451287.0, -452229.0, -453199.0, -454195.0, -455219.0, -633488.0, -634169.0, -634935.0, -635785.0, -636717.0, -637725.0, -638805.0, -639950.0, -641153.0, -642404.0, -643697.0, -645023.0, -646373.0, -647739.0, -649113.0, -650488.0, -651857.0, -653213.0, -654551.0, -655865.0, -657151.0, -658404.0, -659622.0, -660800.0, -661938.0, -663033.0, -664084.0, -665089.0, -666048.0, -666961.0, -667827.0, -668648.0, -669423.0, -670153.0, -670839.0, -671483.0, -672085.0, -672647.0, -673169.0, -673654.0]
    dG_janafs = [-436836.0, -440018.0, -441385.0, -442625.0, -442671.0, -443897.0, -445073.0, -446204.0, -447295.0, -449362.0, -450491.0, -451477.0, -452344.0, -453109.0, -453782.0, -454374.0, -454893.0, -455345.0, -455733.0, -456060.0, -456330.0, -456543.0, -456702.0, -456808.0, -449747.0, -440981.0, -432183.0, -423350.0, -414480.0, -405570.0, -396621.0, -387631.0, -378598.0, -369523.0, -360406.0, -351247.0, -342045.0, -332803.0, -323520.0, -314198.0, -304837.0, -295441.0, -286008.0, -276541.0, -267042.0, -257512.0, -247953.0, -238365.0, -228751.0, -219113.0, -209451.0, -199767.0, -190063.0, -180340.0, -170599.0, -160841.0, -151068.0, -141281.0, -131481.0, -121668.0, -111845.0, -102011.0, -92168.0, -82317.0]
    c = Chemical('F2Pb')
    c.HeatCapacityGas.method = 'WEBBOOK_SHOMATE'
    for T, dH_janaf, dG_janaf in zip(Ts, dH_janafs, dG_janafs):
        dH_calc, dS_calc, dG_calc = standard_state_ideal_gas_formation(c, T)
        rtol = .01
        assert_close(dH_calc, dH_janaf, rtol=rtol)
        if T < 2000:
            assert_close(dG_calc, dG_janaf, rtol=rtol)
        elif T < 4000:
            assert_close(dG_calc, dG_janaf, rtol=.04)
        else:
            assert_close(dG_calc, dG_janaf, rtol=.2)

def test_standard_state_ideal_gas_formation_LiBr():
    Ts = [100.0, 200.0, 250.0, 298.15, 300.0, 350.0, 400.0, 450.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0]
    dH_janafs = [-145252.0, -146508.0, -147426.0, -153971.0, -154024.0, -169893.0, -170392.0, -170958.0, -174594.0, -175796.0, -176908.0, -177967.0, -179005.0, -180024.0, -181029.0, -182019.0, -182999.0, -183966.0, -184921.0, -185863.0, -332030.0, -332199.0, -332369.0, -332541.0, -332718.0, -332901.0, -333093.0, -333295.0, -333508.0, -333736.0, -333978.0, -334236.0, -334512.0, -334806.0, -335119.0, -335451.0, -335803.0, -336175.0, -336568.0, -336981.0, -337415.0, -337870.0, -338346.0, -338843.0, -339363.0, -339905.0, -340470.0, -341038.0, -341641.0, -342270.0, -342925.0, -343605.0, -344311.0, -345046.0, -345805.0, -346598.0, -347424.0, -348283.0, -349177.0, -350108.0, -351077.0, -352086.0, -353137.0, -354231.0]
    dG_janafs = [-160854.0, -176048.0, -183330.0, -189498.0, -189718.0, -194785.0, -198308.0, -201764.0, -204847.0, -210783.0, -216525.0, -222112.0, -227568.0, -232909.0, -238148.0, -243297.0, -248364.0, -253356.0, -258279.0, -263139.0, -260764.0, -256567.0, -252360.0, -248145.0, -243920.0, -239688.0, -235447.0, -231197.0, -226938.0, -222671.0, -218395.0, -214109.0, -209814.0, -205509.0, -201194.0, -196869.0, -192533.0, -188186.0, -183828.0, -179458.0, -175076.0, -170683.0, -166277.0, -161858.0, -157427.0, -152983.0, -148526.0, -144057.0, -139574.0, -135077.0, -130566.0, -126040.0, -121500.0, -116946.0, -112377.0, -107792.0, -103192.0, -98575.0, -93943.0, -89294.0, -84628.0, -79945.0, -75244.0, -70525.0]
    c = Chemical('Lithium Bromide')
    assert c.formula == 'BrLi'
    c.HeatCapacityGas.method = 'WEBBOOK_SHOMATE'
    for T, dH_janaf, dG_janaf in zip(Ts, dH_janafs, dG_janafs):
        dH_calc, dS_calc, dG_calc = standard_state_ideal_gas_formation(c, T)
        if T > 350:
            assert_close(dH_calc, dH_janaf, rtol=.04)
        else:
            assert_close(dH_calc, dH_janaf, rtol=.08)
        # Matches to 2% at higher temperatures, not sure but the phase transitions are fine

def test_standard_state_ideal_gas_formation_NaCl():
    Ts = [100.0, 200.0, 250.0, 298.15, 300.0, 350.0, 400.0, 450.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0]
    dH_janafs = [-179858.0, -180592.0, -180993.0, -181418.0, -181436.0, -181945.0, -185167.0, -185781.0, -186370.0, -187483.0, -188528.0, -189526.0, -190499.0, -191468.0, -192454.0, -290239.0, -290387.0, -290532.0, -290673.0, -290811.0, -290945.0, -291076.0, -291205.0, -291332.0, -291458.0, -291585.0, -291712.0, -291843.0, -291978.0, -292118.0, -292266.0, -292422.0, -292589.0, -292768.0, -292960.0, -293167.0, -293389.0, -293629.0, -293886.0, -294162.0, -294459.0, -294777.0, -295116.0, -295480.0, -295868.0, -296280.0, -296721.0, -297148.0, -297625.0, -298139.0, -298684.0, -299260.0, -299871.0, -300509.0, -301191.0, -301912.0, -302674.0, -303479.0, -304329.0, -305227.0, -306173.0, -307170.0, -308220.0, -309167.0]
    dG_janafs = [-187377.0, -194620.0, -198081.0, -201334.0, -201458.0, -204756.0, -207769.0, -210557.0, -213279.0, -218555.0, -223650.0, -228599.0, -233424.0, -238142.0, -242761.0, -244850.0, -241062.0, -237262.0, -233452.0, -229633.0, -225805.0, -221969.0, -218127.0, -214277.0, -210421.0, -206559.0, -202692.0, -198818.0, -194940.0, -191055.0, -187165.0, -183270.0, -179369.0, -175462.0, -171548.0, -167629.0, -163702.0, -159769.0, -155828.0, -151879.0, -147923.0, -143959.0, -139985.0, -136003.0, -132011.0, -128009.99999999999, -123998.0, -119980.0, -115949.0, -111906.0, -107851.0, -103785.0, -99706.0, -95616.0, -91511.0, -87393.0, -83260.0, -79113.0, -74950.0, -70771.0, -66576.0, -62364.0, -58135.0, -53905.0]
    c = Chemical('NaCl')
    c.HeatCapacityGas.method = 'WEBBOOK_SHOMATE'
    for T, dH_janaf, dG_janaf in zip(Ts, dH_janafs, dG_janafs):
        dH_calc, dS_calc, dG_calc = standard_state_ideal_gas_formation(c, T)
        if T < 250:
            assert_close(dH_calc, dH_janaf, rtol=.007)
        else:
            assert_close(dH_calc, dH_janaf, rtol=.002)

def test_standard_state_ideal_gas_formation_AlN():
    Ts = [100.0, 200.0, 250.0, 298.15, 300.0, 350.0, 400.0, 450.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0]
    dH_janafs = [523905.99999999994, 523605.0, 523306.00000000006, 523000.0, 522988.00000000006, 522668.0, 522347.99999999994, 522028.0, 521703.99999999994, 521025.0, 520263.00000000006, 519376.99999999994, 518328.0, 506497.0, 505396.0, 504286.0, 503167.0, 502040.0, 500905.0, 499765.0, 498620.0, 497471.0, 496320.0, 495166.0, 494011.0, 492855.0, 491698.0, 490542.0, 489387.0, 488234.0, 487082.0, 192031.0, 191979.0, 191930.0, 191884.0, 191842.0, 191804.0, 191770.0, 191741.0, 191716.0, 191696.0, 191681.0, 191671.0, 191665.0, 191665.0, 191670.0, 191679.0, 191693.0, 191713.0, 191735.0, 191760.0, 191788.0, 191819.0, 191851.0, 191884.0, 191917.0, 191948.0, 191978.0, 192005.0, 192028.0, 192046.0, 192060.0, 192064.0, 192082.0]
    dG_janafs = [513034.0, 502220.0, 496908.0, 491851.0, 491658.0, 486462.0, 481311.0, 476201.0, 471126.0, 461074.0, 451141.0, 441325.0, 431630.0, 422821.0, 414507.0, 406293.0, 398172.0, 390138.0, 382184.0, 374307.0, 366501.0, 358762.0, 351087.0, 343473.0, 335917.0, 328416.0, 320967.0, 313569.0, 306219.0, 298915.0, 291655.0, 285406.0, 288742.0, 292079.0, 295418.0, 298759.0, 302101.0, 305444.0, 308787.0, 312132.0, 315477.0, 318823.0, 322169.0, 325515.0, 328861.0, 332207.0, 335553.0, 338899.0, 342244.0, 345589.0, 348934.0, 352277.0, 355621.0, 358963.0, 362305.0, 365646.0, 368987.0, 372327.0, 375667.0, 379006.0, 382344.0, 385682.0, 389021.0, 392357.0]
    c = Chemical('AlN')
    assert c.formula == 'AlN'
    c.HeatCapacityGas.method = 'WEBBOOK_SHOMATE'
    for T, dH_janaf, dG_janaf in zip(Ts, dH_janafs, dG_janafs):
        dH_calc, dS_calc, dG_calc = standard_state_ideal_gas_formation(c, T)
        rtol = .002
        # Perfect match today
        assert_close(dH_calc, dH_janaf, rtol=rtol)
        assert_close(dG_calc, dG_janaf, rtol=rtol)



def test_standard_state_ideal_gas_formation_HKO():
    Ts = [100.0, 200.0, 250.0, 298.15, 300.0, 350.0, 400.0, 450.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0]
    dH_janafs = [-230096.0, -231613.0, -232150.0, -232630.0, -232649.0, -235539.0, -236084.0, -236581.0, -237043.0, -237898.0, -238699.0, -239476.0, -240252.0, -241050.0, -320843.0, -320684.0, -320514.0, -320335.0, -320147.0, -319955.0, -319761.0, -319567.0, -319376.0, -319192.0, -319018.0, -318858.0, -318714.0, -318591.0, -318491.0, -318418.0, -318375.0, -318366.0, -318395.0, -318465.0, -318579.0, -318743.0, -318950.0, -319220.0, -319546.0, -319939.0, -320401.0, -320935.0, -321548.0, -322237.0, -323014.0, -323886.0, -324855.0, -325648.0, -326756.0, -327963.0, -329250.0, -330531.0, -332019.0, -333611.0, -335308.0, -337111.0, -339022.0, -341039.0, -343163.0, -345392.0, -347381.0, -349774.0, -352264.0, -354849.0]
    dG_janafs = [-231978.0, -233204.0, -233538.0, -233762.0, -233769.0, -233819.0, -233535.0, -233186.0, -232784.0, -231850.0, -230779.0, -229594.0, -228312.0, -226943.0, -220882.0, -211802.0, -202735.0, -193682.0, -184642.0, -175615.0, -166599.0, -157596.0, -148603.0, -139619.0, -130645.00000000001, -121678.0, -112719.0, -103766.0, -94817.0, -85871.0, -76928.0, -67986.0, -59043.0, -50099.0, -41151.0, -32200.000000000004, -23243.0, -14278.0, -5305.0, 3679.0, 12674.0, 21684.0, 30708.0, 39748.0, 48807.0, 57886.0, 66987.0, 76084.0, 85227.0, 94395.0, 103588.0, 112799.0, 122050.0, 131333.0, 140648.0, 149998.0, 159384.0, 168806.0, 178267.0, 187768.0, 197261.0, 206838.0, 216455.0, 226116.0]
    c = Chemical('Potassium Hydroxide')
    assert 'HKO' == c.formula
    c.HeatCapacityGas.method = 'WEBBOOK_SHOMATE'
    for T, dH_janaf, dG_janaf in zip(Ts, dH_janafs, dG_janafs):
        #  Very low error
        dH_calc, dS_calc, dG_calc = standard_state_ideal_gas_formation(c, T)
        assert_close(dH_calc, dH_janaf, rtol=.01)

def test_standard_state_ideal_gas_formation_VN():

    Ts = [100.0, 200.0, 250.0, 298.15, 300.0, 350.0, 400.0, 450.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0]
    dH_janafs = [524143.0, 523774.0, 523395.0, 523000.0, 522985.0, 522573.99999999994, 522179.99999999994, 521804.0, 521446.0, 520760.99999999994, 520083.99999999994, 519380.0, 518619.0, 517789.0, 516879.0, 515875.0, 514770.99999999994, 513556.00000000006, 512231.0, 510798.0, 509248.0, 507579.0, 505783.0, 503853.0, 501783.0, 476683.0, 474173.0, 471674.0, 469188.0, 466717.0, 464265.0, 461831.0, 459419.0, 457031.0, 454667.0, 452329.0, 450019.0, 447737.0, 445485.0, 443263.0, -5736.0, -6210.0, -6703.0, -7216.0, -7752.0, -8309.0, -8891.0, -9497.0, -10129.0, -10788.0, -11475.0, -12192.0, -12939.0, -13718.0, -14531.0, -15378.0, -16262.0, -17184.0, -18145.0, -19148.0, -20194.0, -21285.0, -22422.0, -23608.0]
    dG_janafs = [512744.0, 501419.0, 495873.0, 490608.0, 490407.0, 485010.0, 479671.0, 474380.0, 469130.0, 458732.0, 448447.0, 438260.0, 428165.0, 418159.0, 408239.0, 398406.0, 388661.0, 379005.0, 369440.0, 359967.0, 350587.0, 341301.0, 332112.0, 323021.0, 314029.0, 305245.0, 297508.0, 289881.0, 282357.0, 274933.0, 267603.0, 260363.99999999997, 253211.0, 246142.0, 239151.0, 232236.0, 225394.0, 218622.0, 211916.0, 205274.0, 199894.0, 205458.0, 211035.0, 216624.0, 222227.0, 227843.0, 233472.0, 239115.0, 244773.0, 250445.0, 256130.99999999997, 261832.0, 267549.0, 273281.0, 279029.0, 284793.0, 290574.0, 296372.0, 302187.0, 308020.0, 313872.0, 319742.0, 325631.0, 331541.0]
    c = Chemical('Vanadium Nitride')
    assert c.formula == 'NV'
    c.HeatCapacityGas.method = 'WEBBOOK_SHOMATE'
    for T, dH_janaf, dG_janaf in zip(Ts, dH_janafs, dG_janafs):
        dH_calc, dS_calc, dG_calc = standard_state_ideal_gas_formation(c, T)
        rtol = .01
        assert_close(dH_calc, dH_janaf, rtol=rtol)
        assert_close(dG_calc, dG_janaf, rtol=rtol)

def test_standard_state_ideal_gas_formation_CrN():
    Ts = [100.0, 200.0, 250.0, 298.15, 300.0, 350.0, 400.0, 450.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0]
    dH_janafs = [505769.0, 505651.0, 505349.0, 505009.0, 504995.0, 504525.0, 504152.0, 503772.0, 503384.0, 502581.0, 501732.0, 500824.0, 499831.0, 498718.0, 497453.0, 496017.0, 494392.0, 492564.0, 490527.0, 488274.0, 485802.0, 483108.0, 480189.0, 477044.0, 473671.0, 450734.0, 448764.0, 446798.0, 444835.0, 442878.0, 440928.0, 438987.0, 437055.0, 96116.0, 95036.0, 93919.0, 92769.0, 91588.0, 90378.0, 89139.0, 87874.0, 86580.0, 85258.0, 83905.0, 82521.0, 81100.0, 79641.0, 78138.0, 76587.0, 74982.0, 73318.0, 71586.0, 69780.0, 67892.0, 66276.0, 64302.00000000001, 62244.0, 60093.0, 57844.0, 55492.0, 53032.0, 50456.0, 47758.0, 44934.0]
    dG_janafs = [494354.0, 482908.0, 477256.0, 471876.0, 471670.0, 466157.0, 460702.0, 455293.0, 449927.0, 439311.0, 428832.0, 418479.0, 408245.0, 398127.0, 388127.0, 378251.0, 368502.0, 358885.0, 349406.0, 340070.0, 330882.0, 321846.0, 312966.0, 304245.0, 295687.0, 287950.0, 280595.0, 273325.0, 266137.0, 259028.00000000003, 251994.0, 245032.0, 238139.0, 235926.0, 240604.0, 245317.0, 250066.0, 254850.0, 259670.00000000003, 264524.0, 269413.0, 274337.0, 279295.0, 284288.0, 289314.0, 294375.0, 299470.0, 304600.0, 309764.0, 314963.0, 320198.0, 325469.0, 330777.0, 336122.0, 341479.0, 346895.0, 352349.0, 357842.0, 363377.0, 368953.0, 374572.0, 380235.0, 385944.0, 391700.0]
    c = Chemical('Chromium Nitride')
    assert 'CrN' == c.formula
    c.HeatCapacityGas.method = 'WEBBOOK_SHOMATE'
    for T, dH_janaf, dG_janaf in zip(Ts, dH_janafs, dG_janafs):
        dH_calc, dS_calc, dG_calc = standard_state_ideal_gas_formation(c, T)
        rtol = .008
        assert_close(dH_calc, dH_janaf, rtol=rtol)
        assert_close(dG_calc, dG_janaf, rtol=rtol)
        # Dead on
